{
  "name": "scrapeyard",
  "displayName": "Scrapeyard",
  "description": "Parse and transform files using custom TypeScript functions",
  "publisher": "henry-dorsett-case",
  "version": "0.1.4",
  "engines": {
    "vscode": "^1.74.0"
  },
  "icon": "icon.png",
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./out/extension.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/henry-dorsett-case/scrapeyard"
  },
  "contributes": {
    "views": {
      "explorer": [
        {
          "id": "scrapeyardFunctions",
          "name": "Scrapeyard Functions",
          "when": "true"
        },
        {
          "id": "scrapeyardPipelines",
          "name": "Scrapeyard Pipelines",
          "when": "true"
        }
      ]
    },
    "commands": [
      {
        "command": "scrapeyard.refreshFunctions",
        "title": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "scrapeyard.createFunction",
        "title": "Create Function",
        "icon": "$(add)"
      },
      {
        "command": "scrapeyard.createFolder",
        "title": "Create Folder",
        "icon": "$(new-folder)"
      },
      {
        "command": "scrapeyard.deleteFolder",
        "title": "Delete Folder",
        "icon": "$(trash)"
      },
      {
        "command": "scrapeyard.editFunction",
        "title": "Edit Function",
        "icon": "$(edit)"
      },
      {
        "command": "scrapeyard.deleteFunction",
        "title": "Delete Function",
        "icon": "$(trash)"
      },
      {
        "command": "scrapeyard.runFunctionOnFile",
        "title": "Run on Current File"
      },
      {
        "command": "scrapeyard.runFunctionOnSelection",
        "title": "Run on Selection"
      },
      {
        "command": "scrapeyard.createPipeline",
        "title": "Create Pipeline",
        "icon": "$(add)"
      },
      {
        "command": "scrapeyard.editPipeline",
        "title": "Edit Pipeline",
        "icon": "$(edit)"
      },
      {
        "command": "scrapeyard.deletePipeline",
        "title": "Delete Pipeline",
        "icon": "$(trash)"
      },
      {
        "command": "scrapeyard.runPipelineOnFile",
        "title": "Run on Current File"
      },
      {
        "command": "scrapeyard.runPipelineOnSelection",
        "title": "Run on Selection"
      },
      {
        "command": "scrapeyard.movePipelineStepUp",
        "title": "Move Up",
        "icon": "$(arrow-up)"
      },
      {
        "command": "scrapeyard.movePipelineStepDown",
        "title": "Move Down",
        "icon": "$(arrow-down)"
      },
      {
        "command": "scrapeyard.removePipelineStep",
        "title": "Remove from Pipeline",
        "icon": "$(trash)"
      },
      {
        "command": "scrapeyard.configureKeyboardShortcuts",
        "title": "Configure Keyboard Shortcuts",
        "icon": "$(keyboard)"
      },
      {
        "command": "scrapeyard.syncKeyboardShortcuts",
        "title": "Sync Keyboard Shortcuts",
        "icon": "$(sync)"
      },
      {
        "command": "scrapeyard.updateShortcuts",
        "title": "Update Shortcuts",
        "icon": "$(refresh)"
      },
      {
        "command": "scrapeyard.refreshAndSyncAll",
        "title": "Refresh All & Sync",
        "icon": "$(sync-ignored)"
      },
      {
        "command": "scrapeyard.editShortcuts",
        "title": "Edit Shortcuts",
        "icon": "$(keyboard)"
      },
      {
        "command": "scrapeyard.runFunctionOnSelectionPicker",
        "title": "Run Function on Selection..."
      },
      {
        "command": "scrapeyard.runPipelineOnSelectionPicker",
        "title": "Run Pipeline on Selection..."
      },
      {
        "command": "scrapeyard.openTerminalWithContents",
        "title": "Open Terminal with Contents",
        "icon": "$(terminal)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "scrapeyard.refreshFunctions",
          "when": "view == scrapeyardFunctions",
          "group": "navigation"
        },
        {
          "command": "scrapeyard.createFunction",
          "when": "view == scrapeyardFunctions",
          "group": "navigation"
        },
        {
          "command": "scrapeyard.createFolder",
          "when": "view == scrapeyardFunctions",
          "group": "navigation"
        },
        {
          "command": "scrapeyard.refreshAndSyncAll",
          "when": "view == scrapeyardFunctions",
          "group": "navigation@2"
        },
        {
          "command": "scrapeyard.editShortcuts",
          "when": "view == scrapeyardFunctions",
          "group": "navigation@3"
        },
        {
          "command": "scrapeyard.openTerminalWithContents",
          "when": "view == scrapeyardFunctions",
          "group": "navigation@4"
        },
        {
          "command": "scrapeyard.createPipeline",
          "when": "view == scrapeyardPipelines",
          "group": "navigation"
        },
        {
          "command": "scrapeyard.refreshAndSyncAll",
          "when": "view == scrapeyardPipelines",
          "group": "navigation@2"
        }
      ],
      "view/item/context": [
        {
          "command": "scrapeyard.editFunction",
          "when": "view == scrapeyardFunctions && viewItem == function",
          "group": "inline"
        },
        {
          "command": "scrapeyard.deleteFunction",
          "when": "view == scrapeyardFunctions && viewItem == function",
          "group": "inline"
        },
        {
          "command": "scrapeyard.runFunctionOnFile",
          "when": "view == scrapeyardFunctions && viewItem == function"
        },
        {
          "command": "scrapeyard.runFunctionOnSelection",
          "when": "view == scrapeyardFunctions && viewItem == function"
        },
        {
          "command": "scrapeyard.editPipeline",
          "when": "view == scrapeyardPipelines && viewItem == pipeline",
          "group": "inline"
        },
        {
          "command": "scrapeyard.deletePipeline",
          "when": "view == scrapeyardPipelines && viewItem == pipeline",
          "group": "inline"
        },
        {
          "command": "scrapeyard.runPipelineOnFile",
          "when": "view == scrapeyardPipelines && viewItem == pipeline"
        },
        {
          "command": "scrapeyard.runPipelineOnSelection",
          "when": "view == scrapeyardPipelines && viewItem == pipeline"
        },
        {
          "command": "scrapeyard.movePipelineStepUp",
          "when": "view == scrapeyardPipelines && viewItem == pipelineStep",
          "group": "inline"
        },
        {
          "command": "scrapeyard.movePipelineStepDown",
          "when": "view == scrapeyardPipelines && viewItem == pipelineStep",
          "group": "inline"
        },
        {
          "command": "scrapeyard.removePipelineStep",
          "when": "view == scrapeyardPipelines && viewItem == pipelineStep",
          "group": "inline"
        },
        {
          "command": "scrapeyard.editFunction",
          "when": "view == scrapeyardFunctions && viewItem == declarationFile",
          "group": "inline"
        },
        {
          "command": "scrapeyard.deleteFunction",
          "when": "view == scrapeyardFunctions && viewItem == declarationFile",
          "group": "inline"
        },
        {
          "command": "scrapeyard.deleteFolder",
          "when": "view == scrapeyardFunctions && viewItem == folder",
          "group": "inline"
        }
      ],
      "editor/context": [
        {
          "command": "scrapeyard.runFunctionOnSelectionPicker",
          "when": "editorHasSelection",
          "group": "scrapeyard@1"
        },
        {
          "command": "scrapeyard.runPipelineOnSelectionPicker",
          "when": "editorHasSelection",
          "group": "scrapeyard@2"
        }
      ]
    },
    "configuration": {
      "title": "File Parser Extension",
      "properties": {
        "fileParser.nodeModulesPath": {
          "type": "string",
          "default": "",
          "description": "Path to node_modules directory for importing functions"
        },
        "fileParser.functionsPath": {
          "type": "string",
          "default": "",
          "description": "Path to directory containing parser functions"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "package": "vsce package",
    "pin": "vsce package && code --install-extension $(ls -t *.vsix | head -n1) --force"
  },
  "devDependencies": {
    "@types/vscode": "^1.74.0",
    "@types/node": "16.x",
    "typescript": "^4.9.4",
    "@vscode/vsce": "^2.22.0"
  },
  "dependencies": {
    "ts-node": "^10.9.1"
  }
}